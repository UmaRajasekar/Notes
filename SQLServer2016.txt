Course Overview
-> Transact SQL basics
-> SQL server 2016 certifications
-> Understanding database
  -> Structure and Purpose
  -> Terminology
  -> Data types
-> Getting SQL Server 2016
-> Basic SELECT statements
-> ADVANCED statements
-> Querying multiple tables
-> Grouping Data
-> Modifying Data
-> Programming objects
  -> Stored Functions
  -> Input/Output parameters
  -> CTEs
  -> Masking
-> User Defined functions
  -> Scalar Functions
  -> Table-Valued Functions
-> Understanding subqueries
  -> Scalar subqueries
  -> Multi-Valued subqueries
  -> Correlated subqueries
  
Transact SQL is a database programming language based on the Structured Query Language.
  -> A proprietary extension of the SQL standard
  -> Created by Microsoft and Sysbase.
  -> Also referred as 'T-SQL'
Transact SQL is central to working with Microft's hugely popular SQL Server database platform
  -> It is used to create, manage and manipulate SQL server databases.
  -> All applications that communicate with SQL server use T-SQL
Transact SQL is one of the many 'flavors' or proprierty extensions of the SQL language.
  -> MySQL
  -> PL/SQL
  -> Many more..
There is minor differences between T-SQL and PL/SQL
  -> Minor syntax differences
  -> Minor functionality differences
  
Basic SELECT statements
  -> Provides ability to retrieve data from databases
  -> SELECT statement consists of SIX main parts
    SELECT
    FROM
    WHERE
    GROUP BY
    HAVING
    ORDER BY
  -> These main parts are also called clauses

All SQL flavours are based on the SQL standard.

Useful for MCSA: SQL 2016 Database Development

Database
  -> The term 'database' refers to a collection of related data that are easily accessed, managed, and updated.
  -> The advantage of using database from normal dataset is that it can be easily organized, protected from loss, and efficiently managed.
  -> The major actions can be performed using T-SQL are mentioned below:-
    -> INSERT
    -> SELECT
    -> UPDATE
    -> DELETE

Database Structures and Purposes
-> Database structures fall into two categories
  -> OLTP
  -> OLAP
-> OLTP- Online Transaction Processing
  -> Database structure makes inserts, updates and deletes more efficiently.
  -> Reading data from database becomes less effficient over time due to increase in data size over time and data tables structures in database.
-> Online Analytical Processing
  -> Data Warehouse
  -> Loaded with data from OLTP to make reading much efficient.
  -> Data Inserts are not efficient.
-> Most database begin as OLTP as a startup.
-> When data grows, there is always a challenge to maintain number of indexes and usefulness of the indexes to keep data for both query types and maintaining balance between them.
-> Best Pactice: A copy of new data from OLTP is taken and loaded in OLAP on periodic basis and OLAP used for only reporting purposes.

Database Terminologies
-> CRUD
  There are four basic functions of a database.
    CREATE
    READ
    UPDATE
    DELETE
  -> Transactions
    A set of logically releated database modifications that are written to the database as a unit.
    All succeed or All fail
  -> Field
  -> Record
  -> ACID
    Atomicity, consistency, isolation and durability
    Atomicity- Transaction should be done or undone completely.
    Consistency- Transaction may transform a system from one consistent state to another consistent state.
    Isolation- Each transaction should be occuring independently
    Durability- Completed transaction should remain stable/permanent, even during system failure.
  -> Rows returned or affected by a T-SQL query
  -> Normalization
    The process of originizing data to minimize redundancy and remove ambiguity
    Involves seperating a database into tables and defining relationships between the tables.
  -> Commit
  -> Rollback
  -> SSMS
    - SQL Server Management Studio
    - Admininistartive tool used to execute queries.
  
DataTypes in Database
  -> could be column, local variable, expression and parameter has a related datatype
  -> Some datatypes are automatically converted
  -> Some datatypes needs to be explicitly converted
  -> Data types provide first level of data integrity
  -> Data types can be formatted for the result of query result formatting.
  
  Statement Types
  -> DDL - Data Definition Language
    Statements that are used to create and modify database, tables and other objects. Example:- CREATE, ALTER, DROP and TRUNCATE
  -> DML - Data Manipulation Language
    Statements that work with the data in the database tables. Example:- INSERT, UPDATE and DELETE
    
 SQL Server is available in a number of editions
  -> Enterprise
  -> Standard
  -> Express
  -> Web
  -> Developer
  -> Evaluation

Where clause
  -> Where clause limit number of records fetched.
  -> Expressed as conditional statement.

Alias helps in having descriptive name for columns.

DISTINCT-> Only unique rows are returned

ORDER BY to retrieve data

Multi-Part Naming:-
-> When a query, you must uniquely identify an object.
-> SQL server data is organized in hierarchical containers.
  -> Server
  -> Database
  -> Objects(tables, stored procs, etc..)
We can point to a specific object in T-SQL using dotted notation.
SELECT * FROM <server>.<datanbase>.<schema>.<object>

Advanced SELECT Stament
-> LIKE and IN
  -> Wildcard characters can be used
  % Any string of zero or more characters
  _ Any single character
  [] Any single character within the specified range
  [^] Any single character not within the specified range.

INTERSECT AND EXCEPT
Useful in determining below records:-
  -> Determine which values appear in both tables.
  -> Determine which values do not appear in both tables.
  -> Retrives only DISTINCT values
  -> Use concept of left and right input queries
  
Paging Results
  -> The size of a query's result can be hundreds, or even thousands of rows.
    -> Navigating through this data can become a challenge
    -> The ability to move through the result set a few rows at a time is helpful.
  -> There are two functionality provided by T-SQL
    -> OFFSET - Set the number of rows to be skipped before returning the number of rows using FETCH command.
    -> FETCH - Limits the number of rows that are returned from a result set
    -> Above function only in order by clause
    
COALESC-> Evaluates all the arguments in the expression and returns first not null value.
NULLIF-> Evaluates both the expression and returns NULL if both are same else it returns the first value.

There are two types of CASE statements
  -> Simple CASE
  -> Searched CASE-> validates boolean expression instead of WHEN expression
  Case statements can be used in SELECT, UPDATE, INSERT and SET.
  Clauses in WHERE, ORDER BY, HAVING and IN
  
Working effectively with T-SQL requires understanding of below:-
  -> The physical structure of the database
  -> Data contained in the database table
  -> How the tables are related?
  
Database provide one very important benifit
  -> All data is stored, managed and retrived from a single location.
  -> Simplest database structure will be storing all the data in single table with many columns.
  -> The main disadvantage in above structure is that when multiple users trying update same row, locking time increases and leads to slow response
  -> Then the solution came up in the process of Normalization.
  
Table Relationship
  -> Normalization is the process of seperating data into multiple, related tables.
  -> Makes concurrent connections efficient.
  -> This is process of seperating data into multiple tables and having related with primary key and foriegn keys
  
Using JOIN statement
  -> Most real world T-SQL queries will involve multiple tables.
  -> The JOIN statement is based on logical relationships between the tables.
  
Different JOIN types
-> INNER JOIN -> Returns data from each table when common column values appears in both tables.
-> OUTER JOIN -> Returns data from each table when common column values appears in both tables + unmatch column value from table of specified join.
-> CROSS JOIN-> Returns each row from left table combined with all the rows in the right table.
